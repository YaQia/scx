on:
  workflow_call:
    inputs:
      repo-name:
        required: true
        type: string

jobs:
  build-kernel:
    runs-on: ${{ github.repository_owner == 'sched-ext' && fromJSON('[ "self-hosted", "linux", "x64" ]') || 'ubuntu-latest' }}
    steps:
      - name: Install Nix
        if: ${{ runner.environment == 'github-hosted' }}
        uses: DeterminateSystems/nix-installer-action@main

      - uses: actions/checkout@v4

      - name: Load dependencies
        run: nix run ./.github/include#nix-develop-gha -- ./.github/include#restore-kernels

      - run: echo "SCHED_EXT_KERNEL_COMMIT=$(jq -r '."${{ inputs.repo-name }}".commitHash' kernel-versions.json)" >> $GITHUB_ENV

      # check for cached kernel without downloading
      - name: Cache Kernel
        id: cache-kernel
        uses: actions/cache@v4
        with:
          path: |
            linux/arch/x86/boot/bzImage
            linux/usr/include
            linux/**/*.h
          key: kernel-build-${{ env.SCHED_EXT_KERNEL_COMMIT }}-7
          lookup-only: true

      - name: Load dependencies
        if: ${{ steps.cache-kernel.outputs.cache-hit != 'true' }}
        run: nix run ./.github/include#nix-develop-gha -- ./.github/include#build-kernel

      - if: ${{ steps.cache-kernel.outputs.cache-hit != 'true' }}
        name: Clone Kernel
        uses: cytopia/shell-command-retry-action@v0.1.2
        with:
          retries: 10
          pause: 18
          command: git clone --single-branch -b $(jq -r '."${{ inputs.repo-name }}".branch' kernel-versions.json) --depth 100 $(jq -r '."${{ inputs.repo-name }}".repo' kernel-versions.json) linux

      - if: ${{ steps.cache-kernel.outputs.cache-hit != 'true' }}
        name: Select correct commit for cache hash
        run: |
          cd linux
          git switch --detach ${{ env.SCHED_EXT_KERNEL_COMMIT }}
          git log -1 --pretty=format:"%h %ad %s" --date=short

      - if: ${{ steps.cache-kernel.outputs.cache-hit != 'true' }}
      # Build a minimal kernel (with sched-ext enabled) using virtme-ng
        run: cd linux && virtme-ng -v --build --config ../.github/include/sched-ext.config

      - if: ${{ steps.cache-kernel.outputs.cache-hit != 'true' }}
      # Generate kernel headers
        run: cd linux && make headers
